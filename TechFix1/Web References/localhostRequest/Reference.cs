//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TechFix1.localhostRequest {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RequestQuotationServiceSoap", Namespace="http://tempuri.org/")]
    public partial class RequestQuotationService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateRequestQuotationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRequestQuotationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRequestQuotationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPendingRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveRequestQuotationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectRequestQuotationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApprovedRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindRequestQuotationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRequestQuotationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRequestQuotationStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApprovedRequestQuotationsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RequestQuotationService() {
            this.Url = global::TechFix1.Properties.Settings.Default.TechFix1_localhostRequest_RequestQuotationService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateRequestQuotationCompletedEventHandler CreateRequestQuotationCompleted;
        
        /// <remarks/>
        public event UpdateRequestQuotationCompletedEventHandler UpdateRequestQuotationCompleted;
        
        /// <remarks/>
        public event DeleteRequestQuotationCompletedEventHandler DeleteRequestQuotationCompleted;
        
        /// <remarks/>
        public event GetPendingRequestsCompletedEventHandler GetPendingRequestsCompleted;
        
        /// <remarks/>
        public event ApproveRequestQuotationCompletedEventHandler ApproveRequestQuotationCompleted;
        
        /// <remarks/>
        public event RejectRequestQuotationCompletedEventHandler RejectRequestQuotationCompleted;
        
        /// <remarks/>
        public event GetApprovedRequestsCompletedEventHandler GetApprovedRequestsCompleted;
        
        /// <remarks/>
        public event FindRequestQuotationCompletedEventHandler FindRequestQuotationCompleted;
        
        /// <remarks/>
        public event GetRequestQuotationDetailsCompletedEventHandler GetRequestQuotationDetailsCompleted;
        
        /// <remarks/>
        public event UpdateRequestQuotationStatusCompletedEventHandler UpdateRequestQuotationStatusCompleted;
        
        /// <remarks/>
        public event GetApprovedRequestQuotationsCompletedEventHandler GetApprovedRequestQuotationsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateRequestQuotation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateRequestQuotation(int inventoryID, int userID, string itemName, string brandNO, string serialNO, int quantity) {
            object[] results = this.Invoke("CreateRequestQuotation", new object[] {
                        inventoryID,
                        userID,
                        itemName,
                        brandNO,
                        serialNO,
                        quantity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRequestQuotationAsync(int inventoryID, int userID, string itemName, string brandNO, string serialNO, int quantity) {
            this.CreateRequestQuotationAsync(inventoryID, userID, itemName, brandNO, serialNO, quantity, null);
        }
        
        /// <remarks/>
        public void CreateRequestQuotationAsync(int inventoryID, int userID, string itemName, string brandNO, string serialNO, int quantity, object userState) {
            if ((this.CreateRequestQuotationOperationCompleted == null)) {
                this.CreateRequestQuotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRequestQuotationOperationCompleted);
            }
            this.InvokeAsync("CreateRequestQuotation", new object[] {
                        inventoryID,
                        userID,
                        itemName,
                        brandNO,
                        serialNO,
                        quantity}, this.CreateRequestQuotationOperationCompleted, userState);
        }
        
        private void OnCreateRequestQuotationOperationCompleted(object arg) {
            if ((this.CreateRequestQuotationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRequestQuotationCompleted(this, new CreateRequestQuotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRequestQuotation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateRequestQuotation(int requestId, int inventoryID, string itemName, string brandNO, string serialNO, int quantity) {
            object[] results = this.Invoke("UpdateRequestQuotation", new object[] {
                        requestId,
                        inventoryID,
                        itemName,
                        brandNO,
                        serialNO,
                        quantity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRequestQuotationAsync(int requestId, int inventoryID, string itemName, string brandNO, string serialNO, int quantity) {
            this.UpdateRequestQuotationAsync(requestId, inventoryID, itemName, brandNO, serialNO, quantity, null);
        }
        
        /// <remarks/>
        public void UpdateRequestQuotationAsync(int requestId, int inventoryID, string itemName, string brandNO, string serialNO, int quantity, object userState) {
            if ((this.UpdateRequestQuotationOperationCompleted == null)) {
                this.UpdateRequestQuotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRequestQuotationOperationCompleted);
            }
            this.InvokeAsync("UpdateRequestQuotation", new object[] {
                        requestId,
                        inventoryID,
                        itemName,
                        brandNO,
                        serialNO,
                        quantity}, this.UpdateRequestQuotationOperationCompleted, userState);
        }
        
        private void OnUpdateRequestQuotationOperationCompleted(object arg) {
            if ((this.UpdateRequestQuotationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRequestQuotationCompleted(this, new UpdateRequestQuotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteRequestQuotation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteRequestQuotation(int requestId) {
            object[] results = this.Invoke("DeleteRequestQuotation", new object[] {
                        requestId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRequestQuotationAsync(int requestId) {
            this.DeleteRequestQuotationAsync(requestId, null);
        }
        
        /// <remarks/>
        public void DeleteRequestQuotationAsync(int requestId, object userState) {
            if ((this.DeleteRequestQuotationOperationCompleted == null)) {
                this.DeleteRequestQuotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRequestQuotationOperationCompleted);
            }
            this.InvokeAsync("DeleteRequestQuotation", new object[] {
                        requestId}, this.DeleteRequestQuotationOperationCompleted, userState);
        }
        
        private void OnDeleteRequestQuotationOperationCompleted(object arg) {
            if ((this.DeleteRequestQuotationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRequestQuotationCompleted(this, new DeleteRequestQuotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPendingRequests", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPendingRequests() {
            object[] results = this.Invoke("GetPendingRequests", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPendingRequestsAsync() {
            this.GetPendingRequestsAsync(null);
        }
        
        /// <remarks/>
        public void GetPendingRequestsAsync(object userState) {
            if ((this.GetPendingRequestsOperationCompleted == null)) {
                this.GetPendingRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPendingRequestsOperationCompleted);
            }
            this.InvokeAsync("GetPendingRequests", new object[0], this.GetPendingRequestsOperationCompleted, userState);
        }
        
        private void OnGetPendingRequestsOperationCompleted(object arg) {
            if ((this.GetPendingRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPendingRequestsCompleted(this, new GetPendingRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ApproveRequestQuotation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ApproveRequestQuotation(int requestId) {
            object[] results = this.Invoke("ApproveRequestQuotation", new object[] {
                        requestId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveRequestQuotationAsync(int requestId) {
            this.ApproveRequestQuotationAsync(requestId, null);
        }
        
        /// <remarks/>
        public void ApproveRequestQuotationAsync(int requestId, object userState) {
            if ((this.ApproveRequestQuotationOperationCompleted == null)) {
                this.ApproveRequestQuotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveRequestQuotationOperationCompleted);
            }
            this.InvokeAsync("ApproveRequestQuotation", new object[] {
                        requestId}, this.ApproveRequestQuotationOperationCompleted, userState);
        }
        
        private void OnApproveRequestQuotationOperationCompleted(object arg) {
            if ((this.ApproveRequestQuotationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveRequestQuotationCompleted(this, new ApproveRequestQuotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RejectRequestQuotation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RejectRequestQuotation(int requestId) {
            object[] results = this.Invoke("RejectRequestQuotation", new object[] {
                        requestId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RejectRequestQuotationAsync(int requestId) {
            this.RejectRequestQuotationAsync(requestId, null);
        }
        
        /// <remarks/>
        public void RejectRequestQuotationAsync(int requestId, object userState) {
            if ((this.RejectRequestQuotationOperationCompleted == null)) {
                this.RejectRequestQuotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectRequestQuotationOperationCompleted);
            }
            this.InvokeAsync("RejectRequestQuotation", new object[] {
                        requestId}, this.RejectRequestQuotationOperationCompleted, userState);
        }
        
        private void OnRejectRequestQuotationOperationCompleted(object arg) {
            if ((this.RejectRequestQuotationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectRequestQuotationCompleted(this, new RejectRequestQuotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetApprovedRequests", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetApprovedRequests() {
            object[] results = this.Invoke("GetApprovedRequests", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetApprovedRequestsAsync() {
            this.GetApprovedRequestsAsync(null);
        }
        
        /// <remarks/>
        public void GetApprovedRequestsAsync(object userState) {
            if ((this.GetApprovedRequestsOperationCompleted == null)) {
                this.GetApprovedRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApprovedRequestsOperationCompleted);
            }
            this.InvokeAsync("GetApprovedRequests", new object[0], this.GetApprovedRequestsOperationCompleted, userState);
        }
        
        private void OnGetApprovedRequestsOperationCompleted(object arg) {
            if ((this.GetApprovedRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApprovedRequestsCompleted(this, new GetApprovedRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FindRequestQuotation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FindRequestQuotation(int requestId) {
            object[] results = this.Invoke("FindRequestQuotation", new object[] {
                        requestId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FindRequestQuotationAsync(int requestId) {
            this.FindRequestQuotationAsync(requestId, null);
        }
        
        /// <remarks/>
        public void FindRequestQuotationAsync(int requestId, object userState) {
            if ((this.FindRequestQuotationOperationCompleted == null)) {
                this.FindRequestQuotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindRequestQuotationOperationCompleted);
            }
            this.InvokeAsync("FindRequestQuotation", new object[] {
                        requestId}, this.FindRequestQuotationOperationCompleted, userState);
        }
        
        private void OnFindRequestQuotationOperationCompleted(object arg) {
            if ((this.FindRequestQuotationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindRequestQuotationCompleted(this, new FindRequestQuotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRequestQuotationDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RequestQuotation GetRequestQuotationDetails(int requestQuotationId) {
            object[] results = this.Invoke("GetRequestQuotationDetails", new object[] {
                        requestQuotationId});
            return ((RequestQuotation)(results[0]));
        }
        
        /// <remarks/>
        public void GetRequestQuotationDetailsAsync(int requestQuotationId) {
            this.GetRequestQuotationDetailsAsync(requestQuotationId, null);
        }
        
        /// <remarks/>
        public void GetRequestQuotationDetailsAsync(int requestQuotationId, object userState) {
            if ((this.GetRequestQuotationDetailsOperationCompleted == null)) {
                this.GetRequestQuotationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRequestQuotationDetailsOperationCompleted);
            }
            this.InvokeAsync("GetRequestQuotationDetails", new object[] {
                        requestQuotationId}, this.GetRequestQuotationDetailsOperationCompleted, userState);
        }
        
        private void OnGetRequestQuotationDetailsOperationCompleted(object arg) {
            if ((this.GetRequestQuotationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRequestQuotationDetailsCompleted(this, new GetRequestQuotationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRequestQuotationStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateRequestQuotationStatus(int requestQuotationId, string newStatus) {
            object[] results = this.Invoke("UpdateRequestQuotationStatus", new object[] {
                        requestQuotationId,
                        newStatus});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRequestQuotationStatusAsync(int requestQuotationId, string newStatus) {
            this.UpdateRequestQuotationStatusAsync(requestQuotationId, newStatus, null);
        }
        
        /// <remarks/>
        public void UpdateRequestQuotationStatusAsync(int requestQuotationId, string newStatus, object userState) {
            if ((this.UpdateRequestQuotationStatusOperationCompleted == null)) {
                this.UpdateRequestQuotationStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRequestQuotationStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateRequestQuotationStatus", new object[] {
                        requestQuotationId,
                        newStatus}, this.UpdateRequestQuotationStatusOperationCompleted, userState);
        }
        
        private void OnUpdateRequestQuotationStatusOperationCompleted(object arg) {
            if ((this.UpdateRequestQuotationStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRequestQuotationStatusCompleted(this, new UpdateRequestQuotationStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetApprovedRequestQuotations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetApprovedRequestQuotations() {
            object[] results = this.Invoke("GetApprovedRequestQuotations", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetApprovedRequestQuotationsAsync() {
            this.GetApprovedRequestQuotationsAsync(null);
        }
        
        /// <remarks/>
        public void GetApprovedRequestQuotationsAsync(object userState) {
            if ((this.GetApprovedRequestQuotationsOperationCompleted == null)) {
                this.GetApprovedRequestQuotationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApprovedRequestQuotationsOperationCompleted);
            }
            this.InvokeAsync("GetApprovedRequestQuotations", new object[0], this.GetApprovedRequestQuotationsOperationCompleted, userState);
        }
        
        private void OnGetApprovedRequestQuotationsOperationCompleted(object arg) {
            if ((this.GetApprovedRequestQuotationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApprovedRequestQuotationsCompleted(this, new GetApprovedRequestQuotationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RequestQuotation {
        
        private int idField;
        
        private int inventoryIDField;
        
        private int userIDField;
        
        private string itemNameField;
        
        private string brandNOField;
        
        private string serialNOField;
        
        private int quantityField;
        
        private string qStatusField;
        
        private System.DateTime requestDateField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int InventoryID {
            get {
                return this.inventoryIDField;
            }
            set {
                this.inventoryIDField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string ItemName {
            get {
                return this.itemNameField;
            }
            set {
                this.itemNameField = value;
            }
        }
        
        /// <remarks/>
        public string BrandNO {
            get {
                return this.brandNOField;
            }
            set {
                this.brandNOField = value;
            }
        }
        
        /// <remarks/>
        public string SerialNO {
            get {
                return this.serialNOField;
            }
            set {
                this.serialNOField = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public string qStatus {
            get {
                return this.qStatusField;
            }
            set {
                this.qStatusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RequestDate {
            get {
                return this.requestDateField;
            }
            set {
                this.requestDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateRequestQuotationCompletedEventHandler(object sender, CreateRequestQuotationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRequestQuotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRequestQuotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateRequestQuotationCompletedEventHandler(object sender, UpdateRequestQuotationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRequestQuotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRequestQuotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteRequestQuotationCompletedEventHandler(object sender, DeleteRequestQuotationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRequestQuotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRequestQuotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPendingRequestsCompletedEventHandler(object sender, GetPendingRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPendingRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPendingRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ApproveRequestQuotationCompletedEventHandler(object sender, ApproveRequestQuotationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveRequestQuotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveRequestQuotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void RejectRequestQuotationCompletedEventHandler(object sender, RejectRequestQuotationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RejectRequestQuotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RejectRequestQuotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetApprovedRequestsCompletedEventHandler(object sender, GetApprovedRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApprovedRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApprovedRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FindRequestQuotationCompletedEventHandler(object sender, FindRequestQuotationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindRequestQuotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindRequestQuotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRequestQuotationDetailsCompletedEventHandler(object sender, GetRequestQuotationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRequestQuotationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRequestQuotationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RequestQuotation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RequestQuotation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateRequestQuotationStatusCompletedEventHandler(object sender, UpdateRequestQuotationStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRequestQuotationStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRequestQuotationStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetApprovedRequestQuotationsCompletedEventHandler(object sender, GetApprovedRequestQuotationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApprovedRequestQuotationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApprovedRequestQuotationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591